# List.each wants Function(Integer) in this case.
# print is Function(A)
# This make sure that, since print is a global, that it can narrow down.

[1, 2, 3].each(print)

# This time, the item of interest is Option.is_none
# The List, post map, is List[Option[Integer]]
# Option.is_none is Option[A] => Boolean
# Make sure this one works too.
var v = ["1"].map(String.parse_i).reject(Option.is_none)

# Another test, this time with Option.unwrap which has A as the output.
var v2 = [Some(1)].map(Option.unwrap)

define f[A](a: A) {}

# Again, but with a non-generic function as the target.

B"".each_byte(f)
