scoped enum ScopeTest[A] {
    One(A),
    Two
}

var v = [ScopeTest.One(1), ScopeTest.Two, ScopeTest.One(2)]
var check: ScopeTest[Integer] = v[0]

match check: {
    case ScopeTest.One(s):
    case ScopeTest.Two:
        stderr.print("Check failed (Should be Option[Integer])")
}

define f(a: *ScopeTest[Integer] = ScopeTest.Two) {}
